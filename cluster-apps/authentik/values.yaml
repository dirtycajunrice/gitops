spc:
  - AUTHENTIK_EMAIL__FROM
  - AUTHENTIK_EMAIL__PASSWORD
  - AUTHENTIK_EMAIL__USERNAME
  - AUTHENTIK_POSTGRESQL__S3_BACKUP__ACCESS_KEY
  - AUTHENTIK_POSTGRESQL__S3_BACKUP__SECRET_KEY
  - AUTHENTIK_POSTGRESQL__S3_BACKUP__BUCKET
  - AUTHENTIK_POSTGRESQL__S3_BACKUP__HOST
  - AUTHENTIK_POSTGRESQL__S3_BACKUP__REGION
  - AUTHENTIK_SECRET_KEY

authentik:
  fullnameOverride: authentik

  image:
    # name: ghcr.io/goauthentik/server
    # tag: 2021.5.1-rc7
    # name: docker.beryju.org/authentik/server
    # tag: gh-next
    name: jenslanghammer/authentik-test
    tag: v2
    pullPolicy: Always

  authentik:
    log_level: debug
    email:
      host: smtp.gmail.com
      port: 587
      use_ssl: false
      use_tls: true
      timeout: 30
    outposts:
      docker_image_base: jenslanghammer/ak-outpost-proxy-test:latest
      #docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
    error_reporting:
      enabled: true
    postgresql:
      host: postgres-authentik
      name: authentik
    redis:
      host: $(REDIS_AUTHENTIK_SERVICE_HOST)

  envFrom:
    - secretRef:
        name: authentik

  envValueFrom:
    AUTHENTIK_POSTGRESQL__USER:
      secretKeyRef:
        key: username
        name: postgres-authentik-auth
    AUTHENTIK_POSTGRESQL__PASSWORD:
      secretKeyRef:
        key: password
        name: postgres-authentik-auth
    # PGPASSWORD:
    #   secretKeyRef:
    #     key: password
    #     name: postgres-authentik-auth

  ingress:
    enabled: true
    ingressClassName: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.priority: "10"
      cert-manager.io/cluster-issuer: le-production
    hosts:
      - host: auth.cajun.pro
        paths:
          - path: "/"
            pathType: Prefix
    tls:
      - hosts: [auth.cajun.pro]
        secretName: auth-cajun-pro

  volumeMounts:
    - name: secrets
      mountPath: /mnt/secrets
      readOnly: true
    # - name: pgpass
    #   mountPath: /authentik/.pgpass
    #   subPath: .pgpass
    #   readOnly: true
  volumes:
    - name: secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: authentik
    #- name: pgpass
    #  csi:
    #    driver: secrets-store.csi.k8s.io
    #    readOnly: true
    #    volumeAttributes:
    #      secretProviderClass: authentik-pgpass

  livenessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10

  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10
