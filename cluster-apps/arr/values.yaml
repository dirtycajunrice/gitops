global:
  domainName: "nickflix.io"

arr:
  env:
    TZ: America/Chicago
    APP_NAME:
      fieldRef:
        fieldPath: "metadata.labels['app.kubernetes.io/instance']"

  ingress:
    main:
      domainName: "nickflix.io"
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: ingress-authentik-outpost@kubernetescrd
        traefik.ingress.kubernetes.io/router.priority: "10"

      hosts:
        - host: '{{ .Values.global.domainName }}'
          paths:
            - path: '{{ printf "/%s" (replace "-" "/" .Values.global.fullnameOverride) }}'
              pathType: Prefix
      tls:
        - hosts: ['{{ .Values.global.domainName }}']
          secretName: '{{ .Values.global.domainName | replace "." "-" }}'

  persistence:
    config:
      enabled: true
      nameOverride: "-"
      storageClass: cstor-replica-pool
      size: 10Gi
      accessMode: ReadWriteOnce
      retain: true
    media:
      enabled: true
      type: custom
      mountPath: /mnt/media
      volumeSpec:
        nfs:
          server: 10.0.10.211
          path: /mnt/media
    emptydir:
      enabled: true
      type: emptyDir
      mountPath: /mnt/media/torrents/incomplete
      # accessMode: ReadWriteMany
      # size: 1Gi

  podSecurityContext:
    runAsUser: 568
    runAsGroup: 500

  probes:
    liveness:
      custom: true
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 20
        exec:
          command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:${APP_PORT}/${APP_NAME/-//}/api/v3/system/status?apiKey=`IFS=\> && while
              read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
